{"remainingRequest":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/AddTask.vue?vue&type=template&id=4358c8c6&scoped=true","dependencies":[{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/AddTask.vue","mtime":1624437841516},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzID0gImFkZC10YXNrIj4KICAgICAgICA8Zm9ybSBjbGFzcyA9ICJ0b2RvLWZvcm0iPgogICAgICAgICAgICA8aW5wdXQgdHlwZSA9ICJ0ZXh0IiB2LW1vZGVsID0gInRleHQiIHBsYWNlaG9sZGVyPSJFbnRlciBUYXNrIiBjbGFzcyA9ICJ0b2RvLWlucHV0Ij4KICAgICAgICA8L2Zvcm0+CiAgICAgICAgPEJ1dHRvbiBAY2xpY2sgPSAic3VibWl0VGFzayIvPgogICAgPC9kaXY+Cg=="},{"version":3,"sources":["/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/AddTask.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACvF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/AddTask.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class = \"add-task\">\n        <form class = \"todo-form\">\n            <input type = \"text\" v-model = \"text\" placeholder=\"Enter Task\" class = \"todo-input\">\n        </form>\n        <Button @click = \"submitTask\"/>\n    </div>\n</template>\n\n<script>\n\nimport Button from './Button'\n\nexport default {\n    name: 'AddTask',\n    components : {\n        Button\n    },\n    data() {\n        return {\n            text: ''\n        }\n    },\n    methods: {\n        submitTask(e) {\n            e.preventDefault()\n            \n            if (!this.text) {\n                alert('Please add a task!');\n                return\n            }\n            \n            const newTask = {\n                id:Math.floor(Math.random() * 1000),\n                text:this.text,\n                completed:false\n            }\n\n            //Empty data value\n            this.text = \"\";\n\n            this.$emit('add-task',newTask); \n        }\n    }\n}\n</script>\n\n<style scoped>\n.add-task {\n    border: 1px solid black;\n    background-color: white;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-spacing: 5px 10px;\n    cursor: pointer;\n}\n</style>"]}]}