{"remainingRequest":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/Task.vue?vue&type=template&id=84b6d196&scoped=true","dependencies":[{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/Task.vue","mtime":1624602039341},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgICA8ZGl2IGNsYXNzID0gJ3Rhc2snPgogICAgICAgIDxoMyA6Y2xhc3MgPSAiW3Rhc2suY29tcGxldGVkID8gJ3Rhc2stdGV4dC1jb21wbGV0ZWQnOid0YXNrLXRleHQnXSI+CiAgICAgICAgICAgIHt7IHRhc2sudGV4dCB9fQogICAgICAgIDwvaDM+CiAgICAgICAgPGRpdiB2LWlmID0gInRhc2suY29tcGxldGVkIiA+CiAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljayA9ICJjb21wbGV0ZVRhc2sodGFzay5pZCkiIHR5cGU9InN1Y2Nlc3MiIGljb249ImVsLWljb24tY2hlY2siIGRpc2FibGVkPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2sgPSAiZGVsZXRlVGFzayh0YXNrLmlkKSIgdHlwZT0iZGFuZ2VyIiBpY29uPSJlbC1pY29uLWRlbGV0ZSI+PC9lbC1idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiB2LWVsc2U+CiAgICAgICAgICAgICAgICA8ZWwtYnV0dG9uIEBjbGljayA9ICJjb21wbGV0ZVRhc2sodGFzay5pZCkiIHR5cGU9InN1Y2Nlc3MiIGljb249ImVsLWljb24tY2hlY2siPjwvZWwtYnV0dG9uPgogICAgICAgICAgICAgICAgPGVsLWJ1dHRvbiBAY2xpY2sgPSAiZGVsZXRlVGFzayh0YXNrLmlkKSIgdHlwZT0iZGFuZ2VyIiBpY29uPSJlbC1pY29uLWRlbGV0ZSI+PC9lbC1idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4K"},{"version":3,"sources":["/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/Task.vue"],"names":[],"mappings":";IACI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACf,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC/D,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAClB,CAAC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;gBACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACpG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3F,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACjG,CAAC,CAAC,CAAC,CAAC,CAAC;IACT,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/home/nisarg/Documents/Todo_App/todo-app-vue-DataScientistDave/src/components/Task.vue","sourceRoot":"","sourcesContent":["<template>\n    <div class = 'task'>\n        <h3 :class = \"[task.completed ? 'task-text-completed':'task-text']\">\n            {{ task.text }}\n        </h3>\n        <div v-if = \"task.completed\" >\n                <el-button @click = \"completeTask(task.id)\" type=\"success\" icon=\"el-icon-check\" disabled></el-button>\n                <el-button @click = \"deleteTask(task.id)\" type=\"danger\" icon=\"el-icon-delete\"></el-button>\n        </div>\n        <div v-else>\n                <el-button @click = \"completeTask(task.id)\" type=\"success\" icon=\"el-icon-check\"></el-button>\n                <el-button @click = \"deleteTask(task.id)\" type=\"danger\" icon=\"el-icon-delete\"></el-button>\n        </div>\n    </div>\n</template>\n\n<script>\n\nexport default {\n    name:'Task',\n    props:{\n        task:Object\n    },\n    methods: {\n        deleteTask(id) {\n            this.$emit('delete-task',id);\n        },\n        completeTask(id) {\n            this.$emit('complete-task',id);\n        }\n    }\n}\n</script>\n\n<style scoped>\n.task {\n    cursor: pointer;\n    border: 1px solid black;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin: 4px auto;\n    color: rgb(18, 19, 19);\n    background: rgb(5, 247, 255);\n    padding: 14px 32px 14px 16px;\n    border-radius: 5px;\n    width: 90%;\n}\n.task-text {\n    font-family:Arial, Helvetica, sans-serif\n}\n.task-text-completed {\n    font-family:Arial, Helvetica, sans-serif;\n    text-decoration: line-through;\n    color: grey;\n    opacity: 0.4;\n}\n</style>"]}]}